version: '3.8'

services:
  redis:
    image: redis:7-alpine
    command: redis-server --appendonly yes
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - mloc_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  orchestrator:
    build:
      context: .
      dockerfile: docker/app/Dockerfile
    environment:
      - MLOC_NODE_TYPE=ORCHESTRATOR
      - MLOC_REDIS_URL=redis://redis:6379
      - MLOC_HOST=0.0.0.0
      - MLOC_PORT=8000
      - MLOC_LOG_LEVEL=INFO
    ports:
      - "8000:8000"
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - mloc_network
    volumes:
      - orchestrator_logs:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  worker-1:
    build:
      context: .
      dockerfile: docker/app/Dockerfile
    environment:
      - MLOC_NODE_TYPE=WORKER
      - MLOC_REDIS_URL=redis://redis:6379
      - MLOC_WORKER_ID=worker-1
      - MLOC_LOG_LEVEL=INFO
    depends_on:
      redis:
        condition: service_healthy
      orchestrator:
        condition: service_healthy
    networks:
      - mloc_network
    volumes:
      - worker1_data:/tmp/mloc_work
      - worker1_logs:/app/logs
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]
    restart: unless-stopped

  worker-2:
    build:
      context: .
      dockerfile: docker/app/Dockerfile
    environment:
      - MLOC_NODE_TYPE=WORKER
      - MLOC_REDIS_URL=redis://redis:6379
      - MLOC_WORKER_ID=worker-2
      - MLOC_LOG_LEVEL=INFO
    depends_on:
      redis:
        condition: service_healthy
      orchestrator:
        condition: service_healthy
    networks:
      - mloc_network
    volumes:
      - worker2_data:/tmp/mloc_work
      - worker2_logs:/app/logs
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]
    restart: unless-stopped

networks:
  mloc_network:
    driver: bridge

volumes:
  redis_data:
  orchestrator_logs:
  worker1_data:
  worker1_logs:
  worker2_data:
  worker2_logs: