# ----------------------------------------------------
# Base image: official slim Python 3.12
# ----------------------------------------------------
FROM python:3.12-slim

# ----------------------------------------------------
# Environment variables
# ----------------------------------------------------
ENV PYTHONUNBUFFERED=1 \
    PIP_NO_CACHE_DIR=1 \
    RESULTS_DIR=/app/results \
    TASK_TOPICS="tasks.inference,tasks.ppo,tasks.dpo" \
    LOG_LEVEL=INFO \
    HEARTBEAT_INTERVAL_SEC=30

# ----------------------------------------------------
# System packages
# - tini: init process to handle signals & zombie reaping
# - ca-certificates: ensure TLS connections work
# ----------------------------------------------------
RUN apt-get update && apt-get install -y --no-install-recommends \
    tini ca-certificates \
    && rm -rf /var/lib/apt/lists/*

# ----------------------------------------------------
# Non-root user for better security
# UID/GID = 10001
# ----------------------------------------------------
RUN useradd -m -u 10001 appuser
WORKDIR /app

# ----------------------------------------------------
# Python dependencies
# ----------------------------------------------------
COPY requirements.txt /app/
RUN pip install -r requirements.txt

# ----------------------------------------------------
# Application code
# ----------------------------------------------------
COPY listener.py /app/
COPY executors /app/executors
COPY entrypoint.sh /app/

# Ensure entrypoint is executable and results dir writable
RUN chmod +x /app/entrypoint.sh \
    && mkdir -p /app/results \
    && chown -R appuser:appuser /app

# ----------------------------------------------------
# Drop root privileges
# ----------------------------------------------------
USER appuser

# ----------------------------------------------------
# Health check
# - Every 30s, run a small Python snippet to ping Redis
# - Fails if REDIS_URL is missing or ping fails
# ----------------------------------------------------
HEALTHCHECK --interval=30s --timeout=5s --start-period=20s --retries=3 \
  CMD ["python", "-c", "import os,redis,sys; u=os.getenv('REDIS_URL'); sys.exit(1) if not u else (0 if redis.from_url(u, decode_responses=True).ping() else 1)"]

# ----------------------------------------------------
# Entrypoint & CMD
# - tini as PID 1 for signal handling
# - entrypoint.sh runs the worker process
# ----------------------------------------------------
ENTRYPOINT ["/usr/bin/tini", "--"]
CMD ["/app/entrypoint.sh"]
