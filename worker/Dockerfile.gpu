# GPU-enabled worker image with CUDA 12.4 runtime and Python 3.12
# Base image provides CUDA user-space libraries; the host must provide NVIDIA drivers
FROM nvidia/cuda:12.6.2-runtime-ubuntu22.04

# --- Prevent interactive tzdata prompt and set a default timezone ---
ENV DEBIAN_FRONTEND=noninteractive
ARG TZ=Asia/Singapore
ENV TZ=${TZ}

# --- System packages (curl, tini, certificates, tzdata, repo tools) ---
# - Link timezone files before installing tzdata to avoid interactive prompts
# - Reconfigure tzdata in non-interactive mode
RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime \
    && echo $TZ > /etc/timezone \
    && apt-get update \
    && apt-get install -y --no-install-recommends \
         ca-certificates \
         curl \
         tini \
         gnupg2 \
         software-properties-common \
         tzdata \
    && dpkg-reconfigure -f noninteractive tzdata \
    && rm -rf /var/lib/apt/lists/*

# --- Install Python 3.12 from deadsnakes PPA ---
RUN add-apt-repository ppa:deadsnakes/ppa -y \
    && apt-get update \
    && apt-get install -y --no-install-recommends \
         python3.12 \
         python3.12-venv \
         python3-pip \
    && rm -rf /var/lib/apt/lists/*

# --- Create isolated Python 3.12 virtual environment and upgrade pip ---
RUN python3.12 -m venv /opt/py312 \
    && /opt/py312/bin/pip install --upgrade pip
ENV PATH=/opt/py312/bin:$PATH
ENV PYTHONUNBUFFERED=1 PIP_NO_CACHE_DIR=1

# --- Default environment for the worker ---
ENV RESULTS_DIR=/app/results \
    TASK_TOPICS="tasks.inference,tasks.ppo,tasks.dpo" \
    LOG_LEVEL=INFO \
    HEARTBEAT_INTERVAL_SEC=30

# --- Security: run as non-root user ---
RUN useradd -m -u 10001 appuser
WORKDIR /app

# --- Python deps first for better build caching ---
COPY requirements.txt /app/
RUN pip install -r requirements.txt

# --- App code (project layout: host ./app -> container /app/app) ---
COPY listener.py /app/
COPY executors /app/executors

# --- Support scripts ---
COPY entrypoint.sh /app/
COPY healthcheck.py /app/

# --- Permissions and writable result dir ---
RUN chmod +x /app/entrypoint.sh \
    && mkdir -p /app/results \
    && chown -R appuser:appuser /app

USER appuser

# --- Health check: verifies Redis connectivity via /app/healthcheck.py ---
HEALTHCHECK --interval=30s --timeout=5s --start-period=20s --retries=3 \
  CMD ["python", "/app/healthcheck.py"]

# --- Use tini as PID 1 for proper signal handling (graceful shutdown) ---
ENTRYPOINT ["/usr/bin/tini", "--"]

# --- Start the worker (entrypoint script should exec python app/listener.py) ---
CMD ["/app/entrypoint.sh"]
